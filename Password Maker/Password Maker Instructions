Program 3: Password Maker 
Due Nov 8, 2021 by 11:59pm Points 30 Submitting a file upload File Types cpp, txt, h, and hpp
Overview
In this assignment, students will create a working program entirely from scratch. 

Student Learning Outcomes
After completing this assignment, students will:

Select and include data structures from the C++ Standard Template Library
Work with an input file on the file system. 
Return data structures from helper functions. 
Make use of the random number generator. 
Modify strings based upon arbitrary but specific conditions. 
Requirements
Students shall create the entire program, so the instructor will not provide any starting source code. The website does include two example text files students may use, but the program will work with any input file.

Upon execution, the program shall look for and open the UNC-16 encoded ASCII file (i.e. a text file). By default, the file will exist in the same directory as the program, and it requires the name 'input.txt'. For extra credit, students may modify this to instead open the file pointed to by the command line arguments (i.e. argv and argc).

The program shall then use the input file to establish the password generator's vocabulary. To do so, it shall extract every unique token from the file over a minimum length. After establishing the unique tokens, the password generator shall use those tokens to begin producing twenty random passwords. The passwords the program produces must meet the following requirements:

Four (4) randomly selected tokens
Space between each token
Append the number '1' to the last place of the password.
The tokens used to generate the password shall meet the following requirements:

Minimum token length: 3-6 characters (student's choice based on performance). 
No trailing punctuation with each token
If the first character in a token is a letter, it must be upper-case
All other characters must be lower case
Extra credit: No digits may appear anywhere in a token
After printing examples of twenty passwords the program produces, it shall exit. The following are examples of valid passwords that meet these requirements:

Blink Teeth Warlike Abandoned1
Argue Puny Instruct Meddle1
2009,10 Shaky Knowing Canvas1         (Not a valid extra credit password)
Adjustment Warm Zebra Trains1
Rotten Puffy Gruesome Optimal1
Delivery
On or before the due date, students shall submit their version of their main program (e.g., main.cpp) and the output their program produced when they ran it locally (I should see twenty sets of random passwords). 

Grading
You earn points on this assignment through the following ways:

Points	Requirement
13	Tokens extracted correctly from input file.
10	Passwords meet the requirements.
5	Coding Style: For example, using helper functions with data structures as return values
2	Example Output provided.
